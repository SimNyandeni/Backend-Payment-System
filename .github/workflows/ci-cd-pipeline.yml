# The name of your workflow, visible in the GitHub Actions tab
name: Node.js CI/CD Pipeline

# When to run this workflow
on:
  push:
    branches: [ "main" ]   # Triggers on a push to the main branch
  pull_request:
    branches: [ "main" ]   # Also triggers on a PR targeting main

# Permissions to allow the workflow to deploy (if needed for GitHub Pages or similar)
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow is made of one or more jobs
jobs:
  # JOB 1: Continuous Integration (CI) - Test and Build
  build-and-test:
    # The OS to run the job on
    runs-on: ubuntu-latest

    # Strategy for creating a matrix of Node.js versions to test against
    strategy:
      matrix:
        node-version: [18.x] # You can test against multiple versions, e.g., [16.x, 18.x]

    # The sequence of steps for this job
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the correct Node.js version
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Caches node_modules to speed up future runs

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: npm ci # Uses the exact versions from package-lock.json

      # Step 4: Run the test suite (e.g., with Jest, Mocha)
      - name: Run tests
        run: npm test

      # Step 5: Build the project (e.g., create a dist/ folder)
      - name: Build project
        run: npm run build

      # Step 6: Upload the build artifacts for use in the deploy job
      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist  # The folder containing the built, static files

  # JOB 2: Continuous Deployment (CD) - Deploy to GitHub Pages
  deploy:
    # This job has dependencies. It will only run if the 'build-and-test' job is successful.
    needs: build-and-test

    # Grant permissions for GITHUB_TOKEN
    permissions:
      pages: write
      id-token: write

    # Set the environment for deployment (optional, but good practice)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # The OS to run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
